{"version":3,"sources":["app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2C,eAAe,CAAC,CAAA;AAC3D,uBAAgD,iBAAiB,CAAC,CAAA;AAClE,2BAAyB,cAAc,CAAC,CAAA;AACxC,iCAA8B,2BAA2B,CAAC,CAAA;AAC1D,8BAA2B,iBAAiB,CAAC,CAAA;AAC7C,iCAA8B,2BAA2B,CAAC,CAAA;AAC1D,sCAAsC;AACtC,8BAA+C,6BAA6B,CAAC,CAAA;AAC7E,2CAAwC,+CAA+C,CAAC,CAAA;AASxF;IAOI,sBAAoB,OAAe,EAAU,aAA2B;QAP5E,iBA8CC;QAvCuB,YAAO,GAAP,OAAO,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAc;QACpE,IAAI,CAAC,SAAS,GAAG,uBAAU,CAAC;QAC5B,4CAA4C;QAE5C,aAAa,CAAC,YAAY,CAAC,SAAS,CAClC,UAAA,YAAY;YACV,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC;YACb,CAAC;QACJ,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;IACN,CAAC;IAED,4BAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,iCAAU,GAAV;QACI,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb,UAAc,QAAQ,EAAE,QAAQ;QAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC;IACb,CAAC;IAzCD;QAAC,gBAAS,CAAC,SAAS,CAAC;;+CAAA;IAXzB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,cAAc;YAC3B,UAAU,EAAE,CAAC,kCAAe,EAAE,sDAAyB,EAAE,kCAAe,EAAE,0BAAiB,EAAE,gCAAgB,CAAC;YAC9G,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC5B,CAAC;QACD,eAAM,CAAC,uBAAU,CAAC;;oBAAA;IA+CnB,mBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,oBAAY,eA8CxB,CAAA","file":"app/app.component.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Routes, ROUTER_DIRECTIVES, Router} from '@angular/router';\r\nimport {APP_ROUTES} from './app.routes';\r\nimport {NavbarComponent} from './navbar/navbar.component';\r\nimport {LoginService} from './login.service';\r\nimport {HeaderComponent} from './header/header.component';\r\n// import {CONSTANTS} from './shared';\r\nimport {MODAL_DIRECTIVES, ModalComponent} from 'ng2-bs3-modal/ng2-bs3-modal';\r\nimport {ArticleInventoryComponent} from './articleInventory/articleInventory.component';\r\n\r\n@Component({\r\n    selector: 'as-main-app',\r\n    templateUrl: 'app/app.html',\r\n    directives: [NavbarComponent, ArticleInventoryComponent, HeaderComponent, ROUTER_DIRECTIVES, MODAL_DIRECTIVES], // LoginComponent,\r\n    providers: [LoginService]\r\n})\r\n@Routes(APP_ROUTES)\r\nexport class AppComponent implements OnInit {\r\n    public appRoutes: any[];\r\n    // public appBrand: string;\r\n\r\n    @ViewChild('myModal')\r\n    modal: ModalComponent;\r\n\r\n    constructor(private _router: Router, private _loginService: LoginService) {\r\n        this.appRoutes = APP_ROUTES;\r\n        // this.appBrand = CONSTANTS.MAIN.APP.BRAND;\r\n\r\n        _loginService.loginNeeded$.subscribe(\r\n          needForLogin => {\r\n            this.startLogin();\r\n          });\r\n    }\r\n\r\n    ngOnInit() {\r\n        let validRoute = false;\r\n        for (let i = 0, len = this.appRoutes.length; i < len; i++) {\r\n            let route = this.appRoutes[i];\r\n            let urlTree = this._router.createUrlTree([route]);\r\n            validRoute = this._router.urlTree.contains(urlTree);\r\n            if (validRoute) {\r\n                continue;\r\n            }\r\n         }\r\n\r\n         if (!validRoute) {\r\n            this._router.navigateByUrl('/');\r\n         }\r\n    }\r\n\r\n    close() {\r\n        this.modal.close();\r\n    }\r\n\r\n    startLogin() {\r\n        console.log('start open()-method');\r\n        this.modal.open();\r\n    }\r\n\r\n    onLoginSubmit(username, password) {\r\n      this._loginService.onSubmit(username, password);\r\n      this.close;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}