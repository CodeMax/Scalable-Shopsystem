{"version":3,"sources":["app/token.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA4B,sBAAsB,CAAC,CAAA;AACnD,+BAA6B,kBAAkB,CAAC,CAAA;AAGhD;IAGE,eAAY,KAAa;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,2BAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAVH;QAAC,iBAAU,EAAE;;aAAA;IAWb,YAAC;AAAD,CAVA,AAUC,IAAA;AAVY,aAAK,QAUjB,CAAA;AAGD;IAME,sBAAoB,cAA6B,EAAU,eAA+B;QAAtE,mBAAc,GAAd,cAAc,CAAe;QAAU,oBAAe,GAAf,eAAe,CAAgB;QACtF,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QAEvC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CACxC,UAAA,YAAY;YACR,YAAY,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,gCAAS,GAAhB,UAAiB,KAAY;QACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEM,+BAAQ,GAAf;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,sCAAe,GAAtB;QACE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IA/BH;QAAC,iBAAU,EAAE;;oBAAA;IAgCb,mBAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,oBAAY,eA+BxB,CAAA","file":"app/token.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {CookieService} from 'angular2-cookie/core';\r\nimport {NavibarService} from './navbar.service';\r\n\r\n@Injectable()\r\nexport class Token {\r\n  private jwtToken: string;\r\n\r\n  constructor(token: string) {\r\n      this.jwtToken = token;\r\n  }\r\n\r\n  public getJwtToken() {\r\n    return this.jwtToken;\r\n  }\r\n}\r\n\r\n@Injectable()\nexport class TokenService {\n\r\n  private tokenstorekey: string;\r\n  private _cookieService: CookieService;\r\n  private _navibarService: NavibarService;\r\n\r\n  constructor(private _cookieservice: CookieService, private _navibarservice: NavibarService) {\r\n      this._cookieService = _cookieservice;\r\n      this.tokenstorekey = 'jwtAuthToken';\r\n      this._navibarService = _navibarservice;\r\n\r\n      this._navibarService.userHasToken$.subscribe(\r\n          hasAuthToken => {\r\n              hasAuthToken = true;\r\n          });\r\n  }\r\n\r\n  public saveToken(value: Token) {\r\n      this._cookieService.put(this.tokenstorekey, JSON.stringify(value));\r\n      this._navibarService.hasToken(true);\r\n  }\r\n\n  public getToken() {\r\n      let token = this._cookieService.get(this.tokenstorekey);\r\n      return token;\r\n  }\r\n\r\n  public clearLoginToken() {\r\n    this._cookieService.remove(this.tokenstorekey);\r\n    this._navibarService.hasToken(false);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}